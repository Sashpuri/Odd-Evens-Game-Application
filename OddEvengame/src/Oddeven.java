
import java.util.Random;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.INFORMATION_MESSAGE;
import static javax.swing.JOptionPane.QUESTION_MESSAGE;
import static javax.swing.JOptionPane.YES_NO_OPTION;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author hp pc
 */
public class Oddeven extends javax.swing.JFrame {

    public static double score1=0,score2=0;
    public char k;
    public static boolean turn=false;
    /**
     * Creates new form form1
     */
    public Oddeven() {
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        toss = new javax.swing.JPanel();
        b1 = new javax.swing.JButton();
        text = new javax.swing.JTextField();
        computer = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        b2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        score = new javax.swing.JPanel();
        board = new javax.swing.JTextField();
        pscore = new javax.swing.JTextField();
        cscore = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        x = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new java.awt.CardLayout());

        b1.setBackground(new java.awt.Color(51, 0, 255));
        b1.setText("Odd!");
        b1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b1ActionPerformed(evt);
            }
        });

        text.setText("0");

        computer.setEditable(false);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        jLabel1.setText("Your Move");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        jLabel2.setText("Computer");

        b2.setBackground(new java.awt.Color(51, 0, 255));
        b2.setText("Even!");
        b2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b2ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Copperplate Gothic Bold", 1, 48)); // NOI18N
        jLabel3.setText("TOSS");

        javax.swing.GroupLayout tossLayout = new javax.swing.GroupLayout(toss);
        toss.setLayout(tossLayout);
        tossLayout.setHorizontalGroup(
            tossLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tossLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(43, 43, 43))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tossLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(computer, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 148, Short.MAX_VALUE)
                .addGroup(tossLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(tossLayout.createSequentialGroup()
                        .addComponent(text, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(tossLayout.createSequentialGroup()
                        .addComponent(b1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(b2)
                        .addGap(35, 35, 35))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tossLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(224, 224, 224))
        );
        tossLayout.setVerticalGroup(
            tossLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tossLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(92, 92, 92)
                .addGroup(tossLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(67, 67, 67)
                .addGroup(tossLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(computer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(tossLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b1)
                    .addComponent(b2))
                .addContainerGap(225, Short.MAX_VALUE))
        );

        jPanel1.add(toss, "card2");

        board.setEditable(false);
        board.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boardActionPerformed(evt);
            }
        });

        pscore.setText("0");

        cscore.setEditable(false);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        jLabel4.setText("Your Move");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        jLabel5.setText("Computer");

        jLabel6.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jLabel6.setText("Score");

        x.setFont(new java.awt.Font("AR BLANCA", 1, 36)); // NOI18N
        x.setText("GO");
        x.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout scoreLayout = new javax.swing.GroupLayout(score);
        score.setLayout(scoreLayout);
        scoreLayout.setHorizontalGroup(
            scoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scoreLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(scoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, scoreLayout.createSequentialGroup()
                        .addGroup(scoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, scoreLayout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4)
                                .addGap(31, 31, 31))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, scoreLayout.createSequentialGroup()
                                .addComponent(cscore, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 158, Short.MAX_VALUE)
                                .addComponent(pscore, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, scoreLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(scoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(board, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(248, 248, 248))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, scoreLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(x)
                .addGap(263, 263, 263))
        );
        scoreLayout.setVerticalGroup(
            scoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scoreLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(board, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(89, 89, 89)
                .addGroup(scoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(67, 67, 67)
                .addGroup(scoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pscore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cscore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(x)
                .addGap(131, 131, 131))
        );

        jPanel1.add(score, "card3");

        jScrollPane1.setViewportView(jPanel1);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void b1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b1ActionPerformed
        // TODO add your handling code here:
        int n= Integer.parseInt(text.getText());
        int []runs={1,2,3,4,5,6,10};
        Random r = new Random();
        int p=runs[r.nextInt(7)];
        computer.setText(p+"");
        if((p+n)%2==0)
        {
            JOptionPane.showMessageDialog(rootPane,"Lose");
            p=r.nextInt(2);
            switch(p)
                {
                    case 0:
                         JOptionPane.showMessageDialog(rootPane,"Computer Chose to Bat");
                        k='o';
                        score.setVisible(true);
                        toss.setVisible(false); 
                        break;
                        
                    case 1:
                        JOptionPane.showMessageDialog(rootPane,"Computer Chose to Bowl");
                        k='a';
                        score.setVisible(true);
                        toss.setVisible(false);
                        break;
                }
        }
        else
            {
                JOptionPane.showMessageDialog(rootPane,"Win");
               
                switch(JOptionPane.showConfirmDialog(rootPane,"Would You Like to Bat?","Decision", YES_NO_OPTION, QUESTION_MESSAGE))
                {
                    case 0:
                        k='a';
                        score.setVisible(true);
                        toss.setVisible(false);
                        break;
                        
                    case 1:
                        k='o';
                        score.setVisible(true);
                        toss.setVisible(false);
                        break;
                }
                
            }
    }//GEN-LAST:event_b1ActionPerformed

    private void b2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b2ActionPerformed
        // TODO add your handling code here:
        int n= Integer.parseInt(text.getText());
        int []runs={1,2,3,4,5,6,10};
        Random r = new Random();
       
        int p=runs[r.nextInt(7)];
        computer.setText(p+"");
        if((p+n)%2!=0)
        {
            JOptionPane.showMessageDialog(rootPane,"Lose");
            p=r.nextInt(2);
            switch(p)
                {
                    case 0:
                         JOptionPane.showMessageDialog(rootPane,"Computer Chose to Bat");
                         k='o';
                         score.setVisible(true);
                         toss.setVisible(false);
                         break;
                        
                    case 1:
                        JOptionPane.showMessageDialog(rootPane,"Computer Chose to Bowl");
                        k='a';
                        score.setVisible(true);
                        toss.setVisible(false);
                        break;
                }
        
        }
        else
        {
            JOptionPane.showMessageDialog(rootPane,"Win");
            switch(JOptionPane.showConfirmDialog(rootPane,"Would You Like to Bat?","Decision", YES_NO_OPTION, QUESTION_MESSAGE))
                {
                    case 0:
                        k='a';
                        score.setVisible(true);
                        toss.setVisible(false);
                        break;
                        
                    case 1:
                        k='o';
                        score.setVisible(true);
                        toss.setVisible(false);
                        break;
                }
        }
    }//GEN-LAST:event_b2ActionPerformed

    private void boardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boardActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_boardActionPerformed

    private void xActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xActionPerformed
        // TODO add your handling code here:
        int []runs={1,2,3,4,5,6,10};
        Random r = new Random();
        int p=runs[r.nextInt(7)],z=Integer.parseInt(pscore.getText());
        cscore.setText(p+"");
        if(k=='a')
            {
                
            if(z!=p)
            {
                score1+=z; 
                board.setText(score1+"");
                if(turn==true&&(score1>score2))
                {
                    JOptionPane.showMessageDialog(rootPane,"YOUR SCORE: "+score1+"\nOPPONENT'S SCORE: "+score2+"\nYOU WIN","Congratulations!!",INFORMATION_MESSAGE);
                switch(JOptionPane.showConfirmDialog(rootPane,"Would You Like to PlaY Again?","Try Again?", YES_NO_OPTION, QUESTION_MESSAGE))
                    {
                    case 0:
                        score1=score2=0;
                        turn=false;
                        cscore.setText("");
                        pscore.setText("");
                        toss.setVisible(true);
                        score.setVisible(false);
                        break;
                        
                    case 1:
                        System.exit(0);
                        
                        }
                }
            
            }    
            else { JOptionPane.showMessageDialog(rootPane,"YOU'RE OUT"); 
                if(turn==false)
                    {
                    JOptionPane.showMessageDialog(rootPane,"OPPONENT'S BATTING");
                    turn=true;
                    cscore.setText("");
                    pscore.setText("");
                    board.setText("");
                    k='o';
                    }
                else
                    {
                    if(score1<score2){JOptionPane.showMessageDialog(rootPane,"YOUR SCORE: "+score1+"OPPONENT'S SCORE: "+score2+"\nYOU LOSE","Alas",INFORMATION_MESSAGE);}
                    else if(score1>score2){JOptionPane.showMessageDialog(rootPane,"YOUR SCORE: "+score1+"\nOPPONENT'S SCORE: "+score2+"\nYOU WIN","Congratulations!!",INFORMATION_MESSAGE);}
                    else{JOptionPane.showMessageDialog(rootPane,"YOUR SCORE: "+score1+"\nOPPONENT'S SCORE: "+score2+"\nIT'S A DRAW","...",INFORMATION_MESSAGE);}
                        
                    switch(JOptionPane.showConfirmDialog(rootPane,"Would You Like to PlaY Again?","Try Again?", YES_NO_OPTION, QUESTION_MESSAGE))
                    {
                    case 0:
                        score1=score2=0;
                        turn=false;
                        cscore.setText("");
                        pscore.setText("");
                        board.setText("");
                        toss.setVisible(true);
                        score.setVisible(false);
                        break;
                        
                    case 1:
                        System.exit(0);
                        
                        }    
                    }
                }        
            }
        else{
            if(z!=p)
            {
                score2+=p; 
                board.setText(score2+"");
                if(turn==true&&(score2>score1))
                {JOptionPane.showMessageDialog(rootPane,"YOUR SCORE: "+score1+"\nOPPONENT'S SCORE: "+score2+"\nYOU LOSE","Alas",INFORMATION_MESSAGE);
                switch(JOptionPane.showConfirmDialog(rootPane,"Would You Like to PlaY Again?","Try Again?", YES_NO_OPTION, QUESTION_MESSAGE))
                    {
                    case 0:
                        score1=score2=0;
                        turn=false;
                        cscore.setText("");
                        pscore.setText("");
                        board.setText("");
                        toss.setVisible(true);
                        score.setVisible(false);
                        break;
                        
                    case 1:
                        System.exit(0);
                        
                        }
                }
            }    
            else 
            {    
                JOptionPane.showMessageDialog(rootPane,"OPPONENT IS OUT");
                if(turn==false)
                    {
                    JOptionPane.showMessageDialog(rootPane,"YOUR BATTING");
                    turn=true;
                    cscore.setText("");
                    pscore.setText("");
                    board.setText("");
                    k='a';
                    }
                else
                    {
                    if(score1<score2){JOptionPane.showMessageDialog(rootPane,"YOUR SCORE: "+score1+"\nOPPONENT'S SCORE: "+score2+"\nYOU LOSE","Alas",INFORMATION_MESSAGE);}
                    else if(score1>score2){JOptionPane.showMessageDialog(rootPane,"YOUR SCORE: "+score1+"\nOPPONENT'S SCORE: "+score2+"\nYOU WIN","Congratulations!!",INFORMATION_MESSAGE);}
                    else{JOptionPane.showMessageDialog(rootPane,"YOUR SCORE: "+score1+"\nOPPONENT'S SCORE: "+score2+"\nIT'S A DRAW","...",INFORMATION_MESSAGE);}
                        
                    switch(JOptionPane.showConfirmDialog(rootPane,"Would You Like to Play Again?","Try Again?", YES_NO_OPTION, QUESTION_MESSAGE))
                    {
                    case 0:
                        score1=score2=0;
                        turn=false;
                        cscore.setText("");
                        pscore.setText("");
                        toss.setVisible(true);
                        score.setVisible(false);
                        break;
                        
                    case 1:
                        System.exit(0);
                        
                    }    
                    }
             
                
            
            
            
            
            }
    }//GEN-LAST:event_xActionPerformed
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Oddeven.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Oddeven.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Oddeven.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Oddeven.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Oddeven().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b1;
    private javax.swing.JButton b2;
    private javax.swing.JTextField board;
    private javax.swing.JTextField computer;
    private javax.swing.JTextField cscore;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField pscore;
    private javax.swing.JPanel score;
    private javax.swing.JTextField text;
    private javax.swing.JPanel toss;
    private javax.swing.JButton x;
    // End of variables declaration//GEN-END:variables
}
